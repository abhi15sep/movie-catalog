{"version":3,"sources":["assets/placeholder.png","api/tmdb.js","actions/index.js","actions/types.js","components/Pagination.js","components/MoviesList.js","styles/theme.js","components/Spinner.js","components/Error.js","containers/MoviesPage.js","components/CastList.js","components/Iframe.js","components/MovieInfo.js","containers/MoviePage.js","containers/ProfilePage.js","containers/SearchPage.js","containers/ErrorPage.js","components/Searchbar.js","components/Sidebar.js","components/Burger.js","containers/App.js","reducers/moviesReducer.js","reducers/movieReducer.js","reducers/optionsReducer.js","reducers/profileReducer.js","reducers/searchReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","params","api_key","process","include_adult","fetchMovies","page","arguments","length","undefined","dispatch","getState","type","sort","options","sortBy","genres","selectedSort","find","el","selected","selectedGenres","filter","genre","map","id","includes","with_genres","join","sort_by","query","tmdbAPI","get","then","res","payload","data","catch","error","message","fetchMovieSuccess","info","people","recommend","video","fetchMovieError","fetchProfileSuccess","starring","fetchProfileError","fetchSearchSuccess","search","fetchSearchError","PaginationContainer","styled","div","_templateObject","props","theme","colors","primary","PrimaryButton","button","_templateObject2","text","PageInput","input","_templateObject3","CenterPagination","_templateObject4","Pagination","_ref","fetchData","totalPages","_ref$query","_useState","useState","_useState2","Object","slicedToArray","pageInput","setPageInput","react_default","a","createElement","onClick","disabled","concat","max","min","placeholder","value","onChange","e","val","currentTarget","onKeyPress","keyCode","preventDefault","key","MoviesListContainer","MoviesList_templateObject","MoviesListItem","MoviesList_templateObject2","MovieLink","Link","MoviesList_templateObject3","MoviePosterContainer","MoviesList_templateObject4","MoviePoster","img","_templateObject5","MovieSubContainer","_templateObject6","MovieSubTitle","span","_templateObject7","MovieRating","_templateObject8","MoviesList","movie","to","data-id","src","poster_path","alt","title","vote_average","release_date","SpinnerContainer","Spinner_templateObject","Spinner","size","loading","lib","color","ErrorContainer","Error_templateObject","ErrorMessage","h3","Error_templateObject2","Error","MoviesPageContainer","MoviesPage_templateObject","mapDispatchToProps","connect","state","movies","total_pages","results","useEffect","components_Spinner","components_Error","components_Pagination","components_MoviesList","CastContainer","ul","CastList_templateObject","CastItem","li","CastList_templateObject2","AvatarLink","CastList_templateObject3","AvatarImg","CastList_templateObject4","CastList","cast","x","profile_path","PlayerContainer","Iframe_templateObject","Player","iframe","Iframe_templateObject2","Iframe","videoRef","handleVideo","ReactDOM","createPortal","ref","frameBorder","allow","allowFullScreen","document","getElementById","MovieInfoContainer","MovieInfo_templateObject","PosterContainer","MovieInfo_templateObject2","PosterImg","MovieInfo_templateObject3","InfoContainer","MovieInfo_templateObject4","Title","h1","MovieInfo_templateObject5","Text","MovieInfo_templateObject6","Option","MovieInfo_templateObject7","SubTitle","MovieInfo_templateObject8","GenresList","_templateObject9","GenresItem","_templateObject10","_templateObject11","Brake","_templateObject12","TrailerButtonContainer","_templateObject13","TrailerButton","_templateObject14","MovieInfo","useRef","openVideo","setOpenVideo","tagline","overview","components_Iframe","current","target","name","MovieInfo_CastContainer","components_CastList","MoviePageContainer","MoviePage_templateObject","MoviePage_templateObject2","MoviePage_templateObject3","fetchMovie","movieId","asyncToGenerator","regenerator_default","mark","_callee","infoPromise","peoplePromise","recommendPromise","videoPromise","wrap","_context","prev","next","sent","Promise","all","_ref2","_ref3","stop","_x","apply","this","match","window","scrollTo","components_MovieInfo","MoviePage_Brake","MoviePage_Title","ProfilePageContainer","ProfilePage_templateObject","ProfileInfoContainer","ProfilePage_templateObject2","ProfilePage_templateObject3","ProfileImgContainer","ProfilePage_templateObject4","ProfileImg","ProfilePage_templateObject5","BioText","ProfilePage_templateObject6","ProfileInfo","ProfilePage_templateObject7","fetchProfile","profileId","_ref4","_callee2","starringPromise","_context2","_ref5","_ref6","_x2","profile","biography","ProfilePage_Title","SearchPageContainer","SearchPage_templateObject","TitleContainer","SearchPage_templateObject2","SearchSubtitle","SearchPage_templateObject3","SearchQuery","SearchPage_templateObject4","fetchSearch","_ref7","_callee3","searchPromise","_context3","_ref8","_x3","Container","ErrorPage_templateObject","ErrorPage_templateObject2","ErrorNumber","ErrorPage_templateObject3","ErrorComment","ErrorPage_templateObject4","ErrorPage","ErrorPage_ErrorContainer","SearchContainer","Searchbar_templateObject","SearchInput","Searchbar_templateObject2","SearchButton","Searchbar_templateObject3","changeSearchInput","htmlFor","Sidebar_templateObject","ListContainer","Sidebar_templateObject2","OptionTitle","Sidebar_templateObject3","List","Sidebar_templateObject4","ListLink","Sidebar_templateObject5","LogoLink","Sidebar_templateObject6","ListItemText","Sidebar_templateObject7","fetchGenres","objectSpread","selectSort","sortQuery","selectGenres","genreId","handleSortSelection","getAttribute","handleGenresSelection","Sidebar_Container","components_Searchbar","data-query","data-type","keys","i","BurgerContainer","Burger_templateObject","BurgerLine","Burger_templateObject2","Burger","App_templateObject","SidebarContainer","App_templateObject2","toggled","MainContainer","App_templateObject3","Menu","App_templateObject4","withRouter","toggleMenu","setToggleMenu","addEventListener","handleWindow","innerWidth","App_Container","components_Burger","components_Sidebar","react_router","exact","path","component","MoviesPage","containers_MoviePage","assign","timestamp","Date","toString","ProfilePage","containers_SearchPage","initialState","total_results","combineReducers","action","toConsumableArray","matchingSort","restOfSorts","newSort","b","allGenres","matchingGenre","parseInt","genresWithoutMatching","newGenres","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","render","es","styled_components_browser_esm","react_router_dom","containers_App"],"mappings":"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","file":"static/js/main.7736a0c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.d1b4253f.png\";","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n    include_adult: false\n  }\n})","import tmdbAPI from '../api/tmdb'\nimport {\n  FETCH_MOVIES_BEGIN,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_ERROR,\n  FETCH_GENRES,\n  FETCH_GENRES_ERROR,\n  SELECT_GENRES,\n  SELECT_SORT,\n  FETCH_MOVIE_BEGIN,\n  FETCH_MOVIE_SUCCESS,\n  FETCH_MOVIE_ERROR,\n  FETCH_PROFILE_BEGIN,\n  FETCH_PROFILE_SUCCESS,\n  FETCH_PROFILE_ERROR,\n  FETCH_SEARCH_BEGIN,\n  FETCH_SEARCH_SUCCESS,\n  FETCH_SEARCH_ERROR,\n  CHANGE_SEARCH_INPUT\n} from './types'\n\n\n\n\n\n// FETCH ALL GENRES FROM DB\n\nexport const fetchGenres = () => dispatch => {\n  return tmdbAPI.get('/genre/movie/list')\n    .then(res => {\n      const data = res.data.genres.map(genre => {\n        return genre = { ...genre, selected: false }\n      })\n      dispatch({\n        type: FETCH_GENRES,\n        payload: data\n      })\n    }).catch(error => {\n      dispatch({\n        type: FETCH_GENRES_ERROR,\n        payload: error.message\n      })\n    })\n}\n\n\n\n\n\n\n\n// FETCH ALL MOVIES WITH SELECTED OPTIONS\n\nexport const fetchMoviesBegin = () => ({\n  type: FETCH_MOVIES_BEGIN\n})\n\n\nexport const fetchMovies = (page = 1) => {\n  return (dispatch, getState) => {\n    dispatch(fetchMoviesBegin())\n    let params = {}\n    const sort = getState().options.sortBy\n    const genres = getState().options.genres\n\n    const selectedSort = sort.find(el => el.selected === true)\n\n    const selectedGenres = genres\n      .filter(genre => genre.selected === true)\n      .map(el => el.id)\n\n    if (selectedGenres.length > 0 && !selectedGenres.includes(9999)) {\n      params = {\n        with_genres: selectedGenres.join(','),\n        sort_by: selectedSort.query,\n        page: page\n      }\n    } else {\n      params = {\n        sort_by: selectedSort.query,\n        page: page\n      }\n    }\n\n    return tmdbAPI.get('/discover/movie', { params })\n      .then(res => {\n        dispatch({\n          type: FETCH_MOVIES_SUCCESS,\n          payload: res.data\n        })\n      }).catch(error => {\n        dispatch({\n          type: FETCH_MOVIES_ERROR,\n          payload: error.message\n        })\n      })\n  }\n}\n\n\nexport const selectSort = sortQuery => dispatch => {\n  dispatch({\n    type: SELECT_SORT,\n    payload: sortQuery\n  })\n\n  dispatch(fetchMovies())\n}\n\nexport const selectGenres = genreId => dispatch => {\n  dispatch({\n    type: SELECT_GENRES,\n    payload: genreId\n  })\n\n  dispatch(fetchMovies())\n}\n\n\n\n\n\n\n\n\n\n// FETCHING MOVIE BY ID\n\nexport const fetchMovieBegin = () => ({\n  type: FETCH_MOVIE_BEGIN\n})\n\nexport const fetchMovieSuccess = (info, people, recommend, video) => ({\n  type: FETCH_MOVIE_SUCCESS,\n  payload: {\n    info: info.data,\n    people: people.data,\n    recommend: recommend.data,\n    video: video.data,\n  }\n})\n\nexport const fetchMovieError = (error) => ({\n  type: FETCH_MOVIE_ERROR,\n  payload: error.message\n})\n\nexport const fetchMovie = (movieId) => {\n  return async (dispatch) => {\n    dispatch(fetchMovieBegin())\n    const infoPromise = await tmdbAPI.get(`/movie/${movieId}`)\n    const peoplePromise = await tmdbAPI.get(`/movie/${movieId}/credits`)\n    const recommendPromise = await tmdbAPI.get(`/movie/${movieId}/recommendations`)\n    const videoPromise = await tmdbAPI.get(`/movie/${movieId}/videos`)\n    await Promise.all([infoPromise, peoplePromise, recommendPromise, videoPromise])\n      .then(([info, people, recommend, video]) => dispatch(fetchMovieSuccess(info, people, recommend, video)))\n      .catch(error => dispatch(fetchMovieError(error)))\n  }\n}\n\n\n\n\n\n\n// FETCHING PROFILE OF SPECIFIC CAST MEMBER\n\nexport const fetchProfileBegin = () => ({\n  type: FETCH_PROFILE_BEGIN\n})\n\nexport const fetchProfileSuccess = (info, starring) => ({\n  type: FETCH_PROFILE_SUCCESS,\n  payload: {\n    info: info.data,\n    starring: starring.data\n  }\n})\n\nexport const fetchProfileError = (error) => ({\n  type: FETCH_PROFILE_ERROR,\n  payload: error.message\n})\n\nexport const fetchProfile = (profileId) => {\n  return async (dispatch) => {\n    dispatch(fetchProfileBegin())\n    const infoPromise = await tmdbAPI.get(`/person/${profileId}`)\n    const starringPromise = await tmdbAPI.get(`/person/${profileId}/movie_credits`)\n    await Promise.all([infoPromise, starringPromise])\n      .then(([info, starring]) => dispatch(fetchProfileSuccess(info, starring)))\n      .catch(error => dispatch(fetchProfileError(error)))\n  }\n}\n\n\n\n\n\n\n\n\n\n\n// FETCHING SEARCH INPUT\n\nexport const changeSearchInput = (val) => ({\n  type: CHANGE_SEARCH_INPUT,\n  payload: val\n})\n\nexport const fetchSearchBegin = () => ({\n  type: FETCH_SEARCH_BEGIN\n})\n\nexport const fetchSearchSuccess = (search) => ({\n  type: FETCH_SEARCH_SUCCESS,\n  payload: search.data\n})\n\nexport const fetchSearchError = (error) => ({\n  type: FETCH_SEARCH_ERROR,\n  payload: error.message\n})\n\nexport const fetchSearch = (page = 1, query) => {\n  return async (dispatch) => {\n    dispatch(fetchSearchBegin())\n\n    const params = {\n      query: query,\n      page: page\n    }\n    const searchPromise = await tmdbAPI.get('/search/movie', { params })\n    await Promise.all([searchPromise])\n      .then(([search]) => dispatch(fetchSearchSuccess(search)))\n      .catch(error => dispatch(fetchSearchError(error)))\n  }\n}","// fetching movies list\nexport const FETCH_MOVIES_BEGIN = 'FETCH_MOVIES_BEGIN'\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS'\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR'\n\n// fetching genre list\nexport const FETCH_GENRES = 'FETCH_GENRES'\nexport const FETCH_GENRES_ERROR = 'FETCH_GENRES_ERROR'\n\n// selecting params of search\nexport const SELECT_SORT = 'SELECT_SORT'\nexport const SELECT_GENRES = 'SELECT_GENRES'\n\n// fetching specific movie info\nexport const FETCH_MOVIE_BEGIN = 'FETCH_MOVIE_BEGIN'\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS'\nexport const FETCH_MOVIE_ERROR = 'FETCH_MOVIE_ERROR'\n\n// fetching specific profile info\nexport const FETCH_PROFILE_BEGIN = 'FETCH_PROFILE_BEGIN'\nexport const FETCH_PROFILE_SUCCESS = 'FETCH_PROFILE_SUCCESS'\nexport const FETCH_PROFILE_ERROR = 'FETCH_PROFILE_ERROR'\n\n\n// fetch search input\nexport const FETCH_SEARCH_BEGIN = 'FETCH_SEARCH_BEGIN'\nexport const FETCH_SEARCH_SUCCESS = 'FETCH_SEARCH_SUCCESS'\nexport const FETCH_SEARCH_ERROR = 'FETCH_SEARCH_ERROR'\nexport const CHANGE_SEARCH_INPUT = 'CHANGE_SEARCH_INPUT'\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80%;\n  margin: 0 auto;\n  height: 80px;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst PrimaryButton = styled.button`\n  cursor: pointer;\n  outline: none;\n  border: 1px solid transparent;\n  display: block;\n  padding: 8px 20px;\n  border-radius: 15px;\n  font-family: 'Source Sans Pro', 'Roboto', sans-serif;\n  background: ${props => props.theme.colors.primary};\n  color: #fff;\n  transition: 0.2s;\n  font-weight: 600;\n\n  :disabled {\n    opacity: 0;\n    display: none;\n  }\n\n  :hover:enabled {\n    border: 1px solid rgba(0,0,0,0.2);\n    background: transparent;\n    color: ${props => props.theme.colors.text};\n    transform: scale(1.1);\n  }\n`\n\nconst PageInput = styled.input`\n  text-align: center;\n  font-weight: 600;\n  outline: none;\n  border: 1px solid rgba(0,0,0,0.2);\n  border-radius: 15px;\n  padding: 8px;\n  margin-right: 10px;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst CenterPagination = styled.div`\n  font-weight: 600;\n`\n\nconst Pagination = ({ fetchData, page, totalPages, query = ''}) => {\n\n  const [pageInput, setPageInput] = useState(page)\n\n  const handleInputChange = (e) => {\n    const val = e.currentTarget.value\n    val > totalPages \n      ? setPageInput(totalPages) \n      : val < 0 \n        ? setPageInput(1) \n        : setPageInput(val)\n  }\n\n  const handleInputPress = (e) => {\n    if(e.keyCode <= 105 && e.keyCode >= 96){\n      e.preventDefault()\n    }\n    if(e.key === 'Enter' && pageInput > 0) {\n      query ? fetchData(pageInput, query) : fetchData(pageInput)\n    }\n  }\n\n  return (\n    <PaginationContainer>\n      <PrimaryButton \n        onClick={() => query ? fetchData(page - 1, query) : fetchData(page - 1)}\n        disabled={page === 1 ? true : false}\n      >\n        {`${page - 1}`}\n      </PrimaryButton>\n      <CenterPagination>\n        <PageInput \n          type='number' \n          max={totalPages} \n          min={1} \n          placeholder={page} \n          value={pageInput}\n          onChange={handleInputChange}\n          onKeyPress={handleInputPress}\n        /> \n        / {totalPages}\n      </CenterPagination>\n      <PrimaryButton \n        onClick={() => query ? fetchData(page + 1, query) : fetchData(page + 1)}\n        disabled={page === totalPages ? true : false}\n      >\n        {`${page + 1}`}\n      </PrimaryButton>\n    </PaginationContainer>\n  )\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  query: PropTypes.string,\n  fetchData: PropTypes.func.isRequired\n}\n\nexport default Pagination","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport placeholder from '../assets/placeholder.png'\nimport PropTypes from 'prop-types'\n\nconst MoviesListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap; \n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n`\n\nconst MoviesListItem = styled.div`\n  cursor: pointer;\n  width: 250px;\n  border-radius: 10px; \n  margin: 25px 10px;\n  transition: all 0.3s;\n\n  :hover {\n    transform: scale(1.05);\n    box-shadow: 0 3px 3px rgba(0,0,0,0.16), 0 3px 3px rgba(0,0,0,0.23);\n  }\n\n  @media (max-width: 1000px) {\n    width: 200px;\n    transition: all 0.3s;\n  }\n`\n\nconst MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n`\n\nconst MoviePosterContainer = styled.div`\n  position: relative; \n  height: calc(100% - 100px);\n  overflow: hidden;\n  border-radius: 10px 10px 0 0;\n\n  @media (max-width: 1000px) {\n    height: calc(100% - 80px);\n  }\n`\n\nconst MoviePoster = styled.img`\n  display: block; \n  width: 100%; \n  min-height: 100%;\n  margin: auto;\n`\n\nconst MovieSubContainer = styled.div`\n  display: flex; \n  flex-direction: column;\n  justify-content: center; \n  align-items: center; \n  height: 100px;\n\n  @media (max-width: 1000px) {\n    height: 80px;\n  }\n`\n\nconst MovieSubTitle = styled.span`\n  width: 90%;\n  font-size: 16px;\n  text-align: center;\n\n  @media (max-width: 1000px) {\n    font-size: 14px;\n  }\n`\n\nconst MovieRating = styled(MovieSubTitle)`\n  font-weight: 800;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst MoviesList = ({ data }) => {\n  return (\n    <MoviesListContainer>\n      {data && data.map(movie => {\n        return (\n          <MoviesListItem key={movie.id}>\n            <MovieLink\n              to={`/movies/${movie.id}`}\n              data-id={movie.id}\n            >\n              <MoviePosterContainer>\n                <MoviePoster src={movie.poster_path !== null ? `http://image.tmdb.org/t/p/w342${movie.poster_path}` : placeholder} alt='movie poster' />\n              </MoviePosterContainer>\n              <MovieSubContainer>\n                <MovieSubTitle>{movie.title}</MovieSubTitle>\n                <MovieRating>{!movie.vote_average ? (!movie.release_date ? 'NR' : movie.release_date) : movie.vote_average}</MovieRating>\n              </MovieSubContainer>\n            </MovieLink>\n          </MoviesListItem>\n        )\n      })}\n    </MoviesListContainer>\n  )\n}\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number,\n      release_date: PropTypes.string\n    })\n  ).isRequired\n}\n\nexport default MoviesList","const theme = {\n  colors: {\n    primary: '#265B6A',\n    text: '#333'\n  }\n}\n\nexport default theme","import React from 'react'\nimport styled from 'styled-components'\nimport { ImpulseSpinner } from 'react-spinners-kit'\nimport theme from '../styles/theme'\nimport PropTypes from 'prop-types'\n\nconst SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst Spinner = ({ size, loading }) => {\n  return (\n    <SpinnerContainer>\n      <ImpulseSpinner size={size} color={theme.colors.primary} loading={loading} />\n    </SpinnerContainer>\n  )\n}\n\nSpinner.propTypes = {\n  size: PropTypes.number,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default Spinner","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst ErrorContainer = styled.div`\n  width: 90%;\n  height: 100vh;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ErrorMessage = styled.h3`\n  font-size: 30px;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst Error = ({message}) => {\n  return (\n    <ErrorContainer>\n      <ErrorMessage>{message}</ErrorMessage>\n    </ErrorContainer>\n  )\n}\n\nError.propTypes = {\n  message: PropTypes.string\n}\n\nexport default Error","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchMovies } from '../actions'\nimport Pagination from '../components/Pagination'\nimport MoviesList from '../components/MoviesList'\nimport Spinner from '../components/Spinner'\nimport Error from '../components/Error'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst MoviesPageContainer = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`\n\nconst MoviesPage = ({ movies, fetchMovies }) => {\n\n  const { page, total_pages, results, error, loading } = movies\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  if (loading === true) {\n    return <Spinner size={100} loading={loading} />\n  } else if (error) {\n    return <Error message={error} />\n  } else if (results.length === 0) {\n    return  <Error message='No Results Found.' />\n  } else {\n    return (\n      <MoviesPageContainer>\n        <Pagination fetchData={fetchMovies} page={page} totalPages={total_pages} />\n        <MoviesList data={results} />\n        <Pagination fetchData={fetchMovies} page={page} totalPages={total_pages} />\n      </MoviesPageContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies,\n})\n\nconst mapDispatchToProps = {\n  fetchMovies\n}\n\n\nMoviesPage.propTypes = {\n  movies: PropTypes.shape({\n    loading: PropTypes.bool.isRequired,\n    page: PropTypes.number.isRequired,\n    total_pages: PropTypes.number.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired\n  }).isRequired,\n  \n  fetchMovies: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesPage)","import React from 'react'\nimport { Link } from 'react-router-dom' \nimport styled from 'styled-components'\nimport placeholder from '../assets/placeholder.png'\nimport PropTypes from 'prop-types'\n\nconst CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  @media (max-width: 700px) {\n    justify-content: center;\n  }\n`\nconst CastItem = styled.li`\n  position: relative;\n  width: auto;\n`\n\nconst AvatarLink = styled(Link)`\n  position: relative;\n  width: 45px;\n  height: 45px; \n  overflow: hidden; \n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3px;\n`\n\nconst AvatarImg = styled.img`\n  display: block; \n  width: 45px; \n  height: auto;\n`\n\nconst CastList = ({data}) => {\n\n  return (\n    <CastContainer>\n      {data.cast && data.cast.map(x => {\n        return (\n          <CastItem key={`cast_${x.id}`}>\n            <AvatarLink to={`/profile/${x.id}`} data-id={x.id}>\n              <AvatarImg src={x.profile_path ? `http://image.tmdb.org/t/p/w185${x.profile_path}` : placeholder} alt='' />\n            </AvatarLink>\n          </CastItem>\n        )\n      })}\n    </CastContainer>\n  )\n}\n\nCastList.propTypes = {\n  data: PropTypes.shape({\n    cast: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        profile_path: PropTypes.string\n      })\n    )\n  })\n}\n\nexport default CastList","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst PlayerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.9);\n  z-index: 999;\n`\n\nconst Player = styled.iframe`\n  width: 95%;\n  max-width: 800px;\n  height: 450px;\n`\n\nconst Iframe = ({ id, videoRef, handleVideo }) => {\n  return ReactDOM.createPortal(\n    <PlayerContainer onClick={handleVideo} ref={videoRef}>\n      <Player\n        src={`https://www.youtube.com/embed/${id}`}\n        frameBorder='0'\n        allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n        allowFullScreen\n      />\n    </PlayerContainer>,\n    document.getElementById('portal-root')\n  )\n}\n\nIframe.propTypes = {\n  id: PropTypes.number,\n  handleVideo: PropTypes.func.isRequired,\n  videoRef: PropTypes.shape({ \n    current: PropTypes.instanceOf(Element) \n  })\n}\n\nexport default Iframe","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport placeholder from '../assets/placeholder.png'\nimport CastList from './CastList'\nimport Iframe from './Iframe'\nimport PropTypes from 'prop-types'\n\nconst MovieInfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 50px 0;\n\n  @media (max-width: 700px) {\n    flex-direction: column;\n  }\n`\n\nconst PosterContainer = styled.div`\n  overflow: hidden;\n\n  @media (max-width: 700px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50%;\n    margin: 0 auto;\n  }\n`\n\nconst PosterImg = styled.img`\n  display: block;\n  border-radius: 15px;\n  width: 100%;\n`\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 50px;\n\n  @media (max-width: 700px) {\n    margin-left: 0;\n    margin-top: 20px;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 36px;\n  line-height: 1;\n\n  @media (max-width: 700px) {\n    text-align: center;\n  }\n`\n\nconst Text = styled.p`\n  color: ${props => props.theme.colors.text};\n  max-width: 500px;\n  margin: 20px 0;\n\n  @media (max-width: 700px) {\n    text-align: center;\n    margin: 20px auto;\n  }\n`\n\nconst Option = styled.h3`\n  color: ${props => props.theme.colors.primary};\n  text-transform: uppercase;\n  margin: 5px 0;\n\n  @media (max-width: 700px) {\n    text-align: center;\n    margin: 25px 0 15px;\n  }\n`\n\nconst SubTitle = styled.h3`\n  color: ${props => props.theme.colors.text};\n  text-transform: uppercase;\n  margin: 10px 0;\n\n  @media (max-width: 700px) {\n    text-align: center;\n  }\n`\n\nconst GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media (max-width: 700px) {\n    justify-content: center;\n  }\n`\n\nconst GenresItem = styled.li`\n  font-size: 14px;\n  color: ${props => props.theme.colors.text};\n  border-radius: 10px;\n  margin: 10px 10px 10px 0;\n  padding: 5px 15px;\n  background: #f4f4f4;\n`\n\nconst CastContainer = styled.div`\n  max-width: 550px;\n`\n\nconst Brake = styled.div`\n  width: 100%;\n  height: 25px;\n`\n\nconst TrailerButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n\n  @media (max-width: 700px) {\n    justify-content: center;\n  }\n`\n\nconst TrailerButton = styled.button`\n  font-family: 'Source Sans Pro', sans-serif;\n  cursor: pointer;\n  background: ${props => props.theme.colors.primary};\n  padding: 5px 15px;\n  color: #f4f4f4;\n  border: 0;\n  outline: 0;\n  font-size: 16px;\n`\n\nconst MovieInfo = ({ info, cast, video }) => {\n  const videoRef = useRef()\n  const [openVideo, setOpenVideo] = useState(false)\n\n  const handleVideo = (e) => {\n    if(openVideo && videoRef.current === e.target) {\n      setOpenVideo(false)\n    }\n  }\n\n  return (\n    <MovieInfoContainer>\n      <PosterContainer>\n        <PosterImg src={info.poster_path ? `http://image.tmdb.org/t/p/w500${info.poster_path}` : placeholder} alt='poster' />\n      </PosterContainer>\n      <InfoContainer>\n        <div>\n          <Title>{info.title}</Title>\n          <SubTitle>{info.tagline}</SubTitle>\n          <Option>{info.vote_average === 0 ? info.release_date : info.vote_average} / 10</Option>\n          <Text>{info.overview}</Text>\n        </div>\n        <Brake />\n        <TrailerButtonContainer>\n          {video.results.length > 0 && <TrailerButton onClick={() => setOpenVideo(true)}>Watch Trailer</TrailerButton>}\n          {openVideo && <Iframe id={video.results[0].key} videoRef={videoRef} handleVideo={handleVideo} />}\n        </TrailerButtonContainer>\n        <Brake />\n        <Option>Genres</Option>\n        <GenresList>\n          {info.genres && info.genres.map(x => {\n            return (<GenresItem key={`genre-${x.id}`}>{x.name}</GenresItem>)\n          })}\n        </GenresList>\n        <Brake />\n        <Option>Cast</Option>\n        <CastContainer>\n          <CastList data={cast} />\n        </CastContainer>\n      </InfoContainer>\n    </MovieInfoContainer>\n  )\n}\n\nMovieInfo.propTypes = {\n\n  info: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    )\n  }),\n\n  video: PropTypes.object,\n  cast: PropTypes.object,\n\n}\n\nexport default MovieInfo","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchMovie } from '../actions'\nimport Spinner from '../components/Spinner'\nimport MoviesList from '../components/MoviesList'\nimport MovieInfo from '../components/MovieInfo'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst MoviePageContainer = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`\n\nconst Title = styled.h3`\n  color: ${props => props.theme.colors.primary};\n  text-transform: uppercase;\n  line-height: 3;\n\n  @media (max-width: 700px) {\n    text-align: center;\n  }\n`\n\nconst Brake = styled.div`\n  width: 100%;\n  height: 50px;\n`\nconst MoviePage = ({ movie, fetchMovie, match }) => {\n  const { info, people, recommend, video, loading } = movie\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    fetchMovie(match.params.id)\n  }, [])\n\n  if (loading) {\n    return (\n      <Spinner size={100} loading={loading} />\n    )\n  } else {\n    return (\n      <MoviePageContainer>\n        <MovieInfo info={info} cast={people} video={video} />\n        <Brake />\n        {recommend.results.length > 0\n          ? (\n            <div>\n              <Title>Recommendations</Title>\n              <MoviesList data={recommend.results} />\n            </div>\n          )\n          : null\n        }\n      </MoviePageContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movie: state.movie\n})\n\nconst mapDispatchToProps = {\n  fetchMovie\n}\n\nMoviePage.propTypes = {\n  movie: PropTypes.shape({\n    loading: PropTypes.bool.isRequired,\n    info: PropTypes.object.isRequired,\n    people: PropTypes.object.isRequired,\n    recommend: PropTypes.shape({\n      results: PropTypes.arrayOf(PropTypes.object)\n    }).isRequired,\n    video: PropTypes.object.isRequired\n  }).isRequired,\n\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node,\n    }).isRequired,\n  }).isRequired,\n  \n  fetchMovie: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchProfile } from '../actions'\nimport placeholder from '../assets/placeholder.png'\nimport Spinner from '../components/Spinner'\nimport MoviesList from '../components/MoviesList'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst ProfilePageContainer = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`\n\nconst ProfileInfoContainer = styled.div`\n  margin: 50px 0;\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst Title = styled.h3`\n  color: ${props => props.theme.colors.primary};\n  text-transform: uppercase;\n  line-height: 3;\n\n  @media (max-width: 600px) {\n    text-align: center;\n  }\n`\n\nconst ProfileImgContainer = styled.div`\n  max-width: 182px;\n\n  @media (max-width: 600px) {\n    margin: 0 auto;\n  }\n`\n\nconst ProfileImg = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`\n\nconst BioText = styled.p`\n  margin-top: 20px;\n  max-width: 500px;\n`\n\nconst ProfileInfo = styled.div`\n  margin-left: 50px;\n\n  @media (max-width: 600px) {\n    margin-left: 0;\n    aling-items: center;\n    text-align: center;\n  }\n`\n\nconst ProfilePage = ({ profile, fetchProfile, match }) => {\n  const { info, starring, loading } = profile\n\n  useEffect(() => {\n    fetchProfile(match.params.id)\n  }, [])\n\n  if (loading) {\n    return (\n      <Spinner size={100} loading={loading} />\n    )\n  } else {\n    return (\n      <ProfilePageContainer>\n        <ProfileInfoContainer>\n          <ProfileImgContainer>\n            <ProfileImg src={info.profile_path ? `http://image.tmdb.org/t/p/w185${info.profile_path}` : placeholder} alt={info.name} />\n          </ProfileImgContainer>\n          <ProfileInfo>\n            <h1>{info.name}</h1>\n            <BioText>{info.biography}</BioText>\n          </ProfileInfo>\n        </ProfileInfoContainer>\n        {starring.cast.length > 0\n          ? (\n            <div>\n              <Title>Also starred in</Title>\n              <MoviesList data={starring.cast} />\n            </div>\n          )\n          : null\n        }\n      </ProfilePageContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile\n})\n\nconst mapDispatchToProps = {\n  fetchProfile\n}\n\nProfilePage.propTypes = {\n  profile: PropTypes.shape({\n    loading: PropTypes.bool.isRequired,\n    info: PropTypes.object.isRequired,\n    starring: PropTypes.object.isRequired\n  }).isRequired,\n\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node,\n    }).isRequired,\n  }).isRequired,\n  \n  fetchProfile: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchSearch } from '../actions'\nimport Spinner from '../components/Spinner'\nimport Error from '../components/Error'\nimport MoviesList from '../components/MoviesList'\nimport Pagination from '../components/Pagination'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst SearchPageContainer = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SearchSubtitle = styled.h3`\n  font-size: 16px;\n`\n\nconst SearchQuery = styled.span`\n  font-size: 16px;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst SearchPage = ({ fetchSearch, search, match }) => {\n\n  const { results, page, total_pages, loading } = search\n\n  useEffect(() => {\n    fetchSearch(1, match.params.value)\n  }, [])\n\n  if (loading) {\n    return <Spinner size={100} loading={loading} />\n  } else if (results === undefined || results.length === 0) {\n    return (\n      <Error message='No Results Found.' />\n    )\n  } else {\n    return (\n      <SearchPageContainer>\n        <Pagination fetchData={fetchSearch} page={page} totalPages={total_pages} query={match.params.value} />\n        <TitleContainer>\n          <SearchSubtitle>Results for '<SearchQuery>{match.params.value}</SearchQuery>'</SearchSubtitle>\n        </TitleContainer>\n        <MoviesList data={results} />\n        <Pagination fetchData={fetchSearch} page={page} totalPages={total_pages} query={match.params.value} />\n      </SearchPageContainer>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  search: state.search\n})\n\nconst mapDispatchToProps = {\n  fetchSearch\n}\n\nSearchPage.propTypes = {\n\n  search: PropTypes.shape({\n    loading: PropTypes.bool.isRequired,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired, \n    page: PropTypes.number.isRequired, \n    total_pages: PropTypes.number.isRequired\n  }).isRequired,\n\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.node,\n    }).isRequired,\n  }).isRequired,\n\n  fetchSearch: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ErrorNumber = styled.span`\n  font-size: 15rem;\n  line-height: 1;\n  font-weight: 600;\n  color: #eee;\n`\n\nconst ErrorComment = styled.span`\n  font-size: 1rem;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n`\n\nconst ErrorPage = () => {\n  return (\n    <Container>\n      <ErrorContainer>\n        <ErrorNumber>404</ErrorNumber>\n        <ErrorComment>Page doesn't exist :(</ErrorComment>\n      </ErrorContainer>\n    </Container>\n  )\n}\n\nexport default ErrorPage","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeSearchInput } from '../actions'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst SearchInput = styled.input`\n  outline: 0;\n  border: 1px solid rgba(0,0,0,0.2);\n  width: 150px;\n  height: 30px;\n  border-radius: 15px;\n  padding: 5px 15px;\n`\n\nconst SearchButton = styled(Link)`\n  text-decoration: none;\n  margin-left: 10px;\n  color: ${props => props.theme.colors.primary};\n\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nconst Searchbar = ({ search, changeSearchInput }) => {\n\n  const handleSearchInput = (e) => {\n    changeSearchInput(e.target.value)\n  }\n\n  return (\n    <SearchContainer>\n      <label htmlFor='search'>\n        <SearchInput name='search' type='text' onChange={handleSearchInput} value={search.input} />\n        <SearchButton to={`/search/${search.input}`}>Search</SearchButton>\n      </label>\n    </SearchContainer>\n  )\n}\n\nconst mapStateToProps = state => ({\n  search: state.search\n})\n\nconst mapDispatchToProps = {\n  changeSearchInput\n}\n\nSearchbar.propTypes = {\n\n  search: PropTypes.shape({\n    input: PropTypes.string\n  }).isRequired,\n\n  changeSearchInput: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Searchbar)","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchGenres, selectSort, selectGenres } from '../actions'\nimport Searchbar from './Searchbar'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 30px;\n`\n\nconst ListContainer = styled.div`\n  margin-top: 30px;\n`\n\nconst OptionTitle = styled.h3`\n  text-transform: uppercase;\n  line-height: 3;\n  color: ${props => props.theme.colors.primary};\n`\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ListLink = styled(Link)`\n  cursor: default;\n  text-decoration: none;\n  line-height: 3;\n  color: ${props => props.theme.colors.text};\n`\n\nconst LogoLink = styled(Link)`\n  font-family: 'Source Sans Pro', sans-serif;\n  text-decoration: none;\n  color: #000;\n  font-size: 26px;\n  line-height: 0;\n  margin-bottom: 30px;\n  font-weight: 800;\n  text-transform: uppercase;\n`\n\nconst ListItemText = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 150px;\n  height: 30px;\n  font-weight: ${props => props.selected ? 600 : 400};\n  border: ${props => props.selected ? '1px solid rgba(0,0,0,0.2)' : '1px solid transparent'};\n  border-radius: 15px;\n  padding: 5px 15px;\n  margin-bottom: 5px;\n\n  :hover {\n    border: ${props => props.selected ? '1px solid rgba(0,0,0,0.2)' : '1px solid #eee'};\n  }\n`\n\nconst Sidebar = ({ fetchGenres, options, selectGenres, selectSort }) => {\n\n  const { genres, sortBy } = options\n\n  useEffect(() => {\n    fetchGenres()\n  }, [])\n\n  const handleSortSelection = (e) => {\n    if (e.target.getAttribute('data-type') === 'sort') {\n      selectSort(e.target.getAttribute('data-query'))\n    }\n  }\n\n  const handleGenresSelection = (e) => {\n    if (e.target.getAttribute('data-type') === 'genre') {\n      selectGenres(e.target.getAttribute('data-query'))\n    }\n  }\n\n  return (\n    <Container>\n      <LogoLink to='/'>Movie-Catalog</LogoLink>\n      <Searchbar />\n      <ListContainer>\n        <OptionTitle>Sort By</OptionTitle>\n        <List>\n          {sortBy && sortBy.map(el => {\n            return (\n              <ListLink\n                to='/'\n                key={el.query}\n              >\n                <ListItemText\n                  selected={el.selected}\n                  onClick={handleSortSelection}\n                  data-query={el.query}\n                  data-type='sort'\n                >\n                  {el.name}\n                </ListItemText>\n              </ListLink>\n            )\n          })}\n        </List>\n      </ListContainer>\n      <ListContainer>\n        <OptionTitle>Genres</OptionTitle>\n        <List>\n          {genres && Object.keys(genres).map(i => {\n            return (\n              <ListLink\n                to='/'\n                key={genres[i].id}\n              >\n                <ListItemText\n                  selected={genres[i].selected}\n                  data-query={genres[i].id}\n                  data-type='genre'\n                  onClick={handleGenresSelection}\n                >\n                  {genres[i].name}\n                </ListItemText>\n              </ListLink>\n            )\n          })}\n        </List>\n      </ListContainer>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  options: state.options\n})\n\nconst mapDispatchToProps = {\n  fetchGenres,\n  selectSort,\n  selectGenres,\n}\n\nSidebar.propTypes = {\n\n  options: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired\n      })\n    ).isRequired,\n    sortBy: PropTypes.arrayOf(\n      PropTypes.shape({\n        query: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n\n  fetchGenres: PropTypes.func.isRequired,\n  selectGenres: PropTypes.func.isRequired,\n  selectSort: PropTypes.func.isRequired,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react'\nimport styled from 'styled-components'\n\nconst BurgerContainer = styled.div`\n  width: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst BurgerLine = styled.div`\n  width: 100%;\n  height: 3px;\n  background: ${props => props.theme.colors.primary};\n  margin: 3px 0;\n`\n\nconst Burger = () => {\n  return (\n    <BurgerContainer>\n      <BurgerLine />\n      <BurgerLine />\n      <BurgerLine />\n    </BurgerContainer>\n  )\n}\n\nexport default Burger\n\n\n","import React, { useState, useEffect } from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport MoviesPage from './MoviesPage'\nimport MoviePage from './MoviePage'\nimport ProfilePage from './ProfilePage'\nimport SearchPage from './SearchPage'\nimport ErrorPage from './ErrorPage'\nimport Sidebar from '../components/Sidebar'\nimport Burger from '../components/Burger'\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst SidebarContainer = styled.div`\n  padding-top: 50px;\n  padding-left: 50px;\n  height: 100vh;\n  overflow-y: scroll;\n  width: 300px;\n  overflow-x: hidden;\n  position: fixed;\n  left: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 1000px) {\n    z-index: 98;\n    left: ${props => props.toggled ? 0 : '-300px'};\n    transition: all 0.5s;\n    background: #fff;\n  }\n`\n\nconst MainContainer = styled.div`\n  width: calc(100% - 300px);\n  margin-left: 300px;\n  transition: all 0.5s;\n\n  @media (max-width: 1000px) {\n    width: 100%;\n    margin-left: 0;\n    margin-top: 50px;\n  }\n`\n\nconst Menu = styled.div`\n  cursor: pointer;\n  z-index: 99;\n  position: fixed;\n  top: 15px;\n  left: -50px;\n\n  @media (max-width: 1000px) {\n    left: ${props => props.toggled ? '225px' : '20px'};\n    transition: all 0.3s;\n  }\n`\n\nconst App = () => {\n\n  const [toggleMenu, setToggleMenu] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindow)\n  })\n\n  const handleMenu = () => {\n    setToggleMenu(!toggleMenu)\n  }\n\n  const handleWindow = () => {\n    if (window.innerWidth >= 1000) {\n      setToggleMenu(false)\n    }\n  }\n\n\n  return (\n    <Container>\n      <Menu onClick={handleMenu} toggled={toggleMenu}>\n        <Burger />\n      </Menu>\n\n      <SidebarContainer toggled={toggleMenu}>\n        <Sidebar />\n      </SidebarContainer>\n\n      <MainContainer>\n        <Switch>\n          <Route exact path='/' component={MoviesPage} />\n          <Route path='/movies/:id' component={(props) => <MoviePage timestamp={new Date().toString()} {...props} />} />\n          <Route path='/profile/:id' component={ProfilePage} />\n          <Route path='/search/:value' component={(props) => <SearchPage timestamp={new Date().toString()} {...props} />} />\n\n          <Route component={ErrorPage} />\n        </Switch>\n      </MainContainer>\n    </Container>\n  )\n}\n\nexport default withRouter(App)","import { FETCH_MOVIES_BEGIN, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_ERROR } from '../actions/types'\n\nconst initialState = {\n  loading: true,\n  page: 0,\n  total_results: 0,\n  total_pages: 0,\n  results: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case FETCH_MOVIES_BEGIN:\n    return {\n      ...state,\n      loading: true\n    }\n\n  case FETCH_MOVIES_SUCCESS:\n    return {\n      loading: false,\n      page: action.payload.page,\n      total_results: action.payload.total_results,\n      total_pages: action.payload.total_pages,\n      results: [...action.payload.results]\n    }\n\n  case FETCH_MOVIES_ERROR:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n\n  default:\n    return state\n  }\n}","import { FETCH_MOVIE_BEGIN, FETCH_MOVIE_SUCCESS, FETCH_MOVIE_ERROR } from '../actions/types'\n\nconst initialState = {\n  loading: true,\n  info: {},\n  people: {},\n  recommend: {},\n  video: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case FETCH_MOVIE_BEGIN:\n    return {\n      ...state,\n      loading: true\n    }\n\n  case FETCH_MOVIE_SUCCESS:\n    return {\n      loading: false,\n      info: { ...action.payload.info },\n      people: { ...action.payload.people },\n      recommend: { ...action.payload.recommend },\n      video: { ...action.payload.video }\n    }\n\n  case FETCH_MOVIE_ERROR:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n\n  default:\n    return state\n  }\n}","import { FETCH_GENRES, FETCH_GENRES_ERROR, SELECT_GENRES, SELECT_SORT } from '../actions/types'\n\nconst initialState = {\n  genres: [\n    { id: 9999, name: 'All Movies', selected: true }\n  ],\n  sortBy: [\n    {\n      name: 'Popularity',\n      query: 'popularity.desc',\n      selected: true\n    },\n    {\n      name: 'Ratings',\n      query: 'vote_average.desc',\n      selected: false\n    },\n    {\n      name: 'Release',\n      query: 'release_date.desc',\n      selected: false\n    }\n  ]\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  \n  case FETCH_GENRES:\n    return {\n      ...state,\n      genres: [...state.genres, ...action.payload]\n    }\n\n  case FETCH_GENRES_ERROR:\n    return {\n      ...state,\n      error: action.payload\n    }\n\n  case SELECT_SORT:\n    let matchingSort = state.sortBy.find(el => el.query === action.payload)\n    let selectedSort = state.sortBy.find(el => el.selected === true)\n    let restOfSorts = state.sortBy.filter(el => el.query !== action.payload)\n\n    if (matchingSort.query === selectedSort.query) {\n      return state\n    } else if (matchingSort.selected === false) {\n      restOfSorts = restOfSorts.map(el => {\n        return {\n          ...el,\n          selected: false\n        }\n      })\n      matchingSort.selected = true\n    }\n\n    let newSort = [...restOfSorts, matchingSort]\n      .sort((a, b) => {\n        return a.name > b.name ? 1 : -1\n      })\n\n    return {\n      ...state,\n      sortBy: [...newSort]\n    }\n\n  case SELECT_GENRES:\n    const allGenres = state.genres.find(el => el.name === 'All Movies')\n    let matchingGenre = state.genres.find(el => el.id === parseInt(action.payload))\n    let genresWithoutMatching = state.genres.filter(el => el.id !== parseInt(action.payload))\n\n    if (matchingGenre.id === allGenres.id && matchingGenre.selected === true) {\n      return state\n    } else if (matchingGenre.id === allGenres.id && matchingGenre.selected === false) {\n      genresWithoutMatching = genresWithoutMatching.map(el => {\n        return {\n          ...el,\n          selected: false\n        }\n      })\n      matchingGenre.selected = true\n    } else if (matchingGenre.id !== allGenres.id && matchingGenre.selected === true) {\n      matchingGenre.selected = false\n    } else if (matchingGenre.id !== allGenres.id && matchingGenre.selected === false) {\n      allGenres.selected = false\n      matchingGenre.selected = true\n    }\n\n    let newGenres = [...genresWithoutMatching, matchingGenre]\n      .sort((a, b) => {\n        if (a.name === 'All Movies') return -1\n        if (b.name === 'All Movies') return 1\n        return a.name > b.name ? 1 : -1\n      })\n\n    return {\n      ...state,\n      genres: [...newGenres]\n    }\n\n  default:\n    return state\n  }\n}","import { FETCH_PROFILE_BEGIN, FETCH_PROFILE_SUCCESS, FETCH_PROFILE_ERROR } from '../actions/types'\n\nconst initialState = {\n  loading: true,\n  info: {},\n  starring: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case FETCH_PROFILE_BEGIN:\n    return {\n      ...state,\n      loading: true\n    }\n\n  case FETCH_PROFILE_SUCCESS:\n    return {\n      loading: false,\n      info: { ...action.payload.info },\n      starring: { ...action.payload.starring }\n    }\n\n  case FETCH_PROFILE_ERROR:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n\n  default:\n    return state\n  }\n}","import { FETCH_SEARCH_BEGIN, FETCH_SEARCH_SUCCESS, FETCH_SEARCH_ERROR, CHANGE_SEARCH_INPUT } from '../actions/types'\n\nconst initialState = {\n  loading: true,\n  input: '',\n  page: 0,\n  total_pages: 0,\n  results: [],\n  total_results: 0\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case CHANGE_SEARCH_INPUT:\n    return {\n      ...state,\n      loading: false,\n      input: action.payload\n    }\n\n  case FETCH_SEARCH_BEGIN:\n    return {\n      ...state,\n      loading: true\n    }\n\n  case FETCH_SEARCH_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      input: '',\n      page: action.payload.page,\n      total_results: action.payload.total_results,\n      total_pages: action.payload.total_pages,\n      results: [...action.payload.results]\n    }\n\n  case FETCH_SEARCH_ERROR:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n\n  default:\n    return state\n  }\n}","import { combineReducers } from 'redux'\nimport moviesReducer from './moviesReducer'\nimport movieReducer from './movieReducer'\nimport optionsReducer from './optionsReducer'\nimport profileReducer from './profileReducer'\nimport searchReducer from './searchReducer'\n\nexport default combineReducers({ \n  movies: moviesReducer,\n  movie: movieReducer,\n  options: optionsReducer,\n  profile: profileReducer,\n  search: searchReducer\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}